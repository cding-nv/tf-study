1
SRAM
DRAM
Flash
磁盘
SIMD   增加硬件资源出来相互独立的数据    gpu
DSA   domain specific architecture        tensor core， cube    
        cache 变成 buffer （scratchpad），  
                 davinci： L0A  L0B L1  L0C  UB， core 外的 L2， DDR
                   vector ：  非矩阵乘 运算
                   专有指令集
                   显式buffer 管理
                   
     SIMD
     INT8
     DSA 专用语言编程
卷积通过 im2col 转换为矩阵乘法

2
cube （tensor core）  矩阵乘， 卷积， 全链接
vector （gpu） 向量运算， pooling， Relu， batchnorm， softmax， rpn 等
scalar     （cpu） 控制 标量运算 
片上存储单元， 大数据通路 保证数据供应
硬化 img2col， 传输过程中随路计算的padding relu等

3.
L0A 左矩阵
L0B 右矩阵
L0C 中间结果
A/B DFF 数据寄存器 缓冲 16x16 左右矩阵
Accum DFF  数据寄存器  缓冲16x16 结果矩阵
2bit 运算   L0B 支持的 type， 即 wegihts

vector Unit  指令  向量 加减乘除 取余 求导数， 最大 最小值， IOU， 总面积， 128长度 fp16的向量运算 或者 64个fp32 int32 的向量运算
unified buffer  UB， 保存vector 源操作数 目的操作数， 32B对齐
L0C 到 UB， 需要以vector unit作为中转， 并可以随数据搬运完成一些 RELU 数据格式转换等操作

Scalar Unit  负责标量运算， 循环控制， 分支判断， cube、vector的指令地址和参数计算及基本算术运算
scalar 寄存器有限  堆栈空间可能是 UB 可能是Scalar buffer
GPR  32个通用寄存器，
SPR 专用寄存器，为了支持指令集一些指令的特殊需要， 比如 coreID， blockID， VA（vector addr）， status， CTRL等寄存器  

4. MTE  / BIU 和 片上高速存储
 BIU   bus inferface unit    AICore 的大门， 从AICore 外部  L2 DDR HBM 读取数据及往外写数据  将AICore 读写请求转换为总线上的请求并完成协议交互等工作
MTE  memory transfer unit，  也叫  Load store unit， 负责 内部数据在不同buffer之间读写管理及完成一些格式转换， 比如 padding， transpose，img2Col，解压等
L1 buffer， 暂存AICore 反复使用的数据； MTE 的的格式转换操作要求数据源必须位于 L1 buffer

5. 指令和控制系统
I cache  -》 scalar PSQ  指令处理队列 -》 instr  dispatch  指令分发模块  -》   cube queue， vector queue，mte queue  并行执行 -》 event sync  指令流水同步模块  barrier， set_flag， wait_flag。。。
system control  外部的Task scheduler 控制和初始化 AICore 配置接口， block 执行控制， 中断，状态申报等

外部存储：  L2 buffer 32M，  HBM + DDR
HBM+DDR -> L2 buffer -> L1 buffer -> L0A / L0B, UB
只有 UB 可以往 L2 和 HBM/DDR 写数据， 其他单元都不行， 数据想出去必须先到UB 再出去 ！

6.
卷积运算通路：
Y =  im2col（X） *  W + bias
x 要做 im2col， 必须先送到 L1，
w 可以直接送到 L0B
L0C 搬到 UB， UB再搬到 L2 或 DDR， 也可以搬到L1 为下次运算做准备
L0A L0B，  ping pong， 一半一半，  一半用来算， 一半用来往里搬， 再交换
L0C ping pong， 是一半cube写， 一半往外写

流水线：   标量流水线， 向量， 矩阵， MTE123。。流水线
barrier 指令    写后读相关
set_flag  /   wait_flag 设置 

vector bound， mte bound， 。。。

